#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC   &kp F1    &kp F2    &kp F3    &kp F4    &kp F5              &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5              &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB   &kp Q     &kp W     &kp F     &kp P     &kp B               &kp K      &kp L     &kp U      &kp Y     &kp SEMI  &kp EQUAL
&kp LCTRL &kp A     &kp R     &kp S     &kp T     &kp G               &kp M      &kp N     &kp E      &kp I     &kp O     &kp SQT
&kp HOME  &kp Z     &kp X     &kp C     &kp D     &kp V               &kp J      &kp H     &kp COMMA  &kp DOT   &kp FSLH  &kp BSLH
&kp END   &kp LSHFT &kp LGUI  &kp LALT  &kp LCTRL                                &kp RCTRL &kp LBKT   &kp RBKT  &kp RSHFT &kp F12
                                       &kp SPACE &kp BSPC  &kp ESC    &kp PG_UP  &kp DEL  &kp ENTER
                                       &kp LGUI  &mo 1    &mo 2      &kp PG_DN  &mo 2     &mo 1
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans   &kp C_BRI_UP &kp C_BRI_DN &none   &none   &rgb_ug RGB_BRD   &rgb_ug RGB_BRI &kp C_PREV &kp C_PP &kp C_NEXT &kp C_VOL_UP &kp C_VOL_DN
&none    &none        &none        &none   &none   &none             &none           &none      &none    &none      &none        &none
&none    &kp KP_NUM   &kp N7       &kp N8  &kp N9  &none             &none           &kp HOME   &kp UP   &kp END    &none        &kp PSCRN
&kp CAPS &none        &kp N4       &kp N5  &kp N6  &none             &none           &kp LEFT   &kp DOWN &kp RIGHT  &kp K_APP    &none
&none    &kp N0       &kp N1       &kp N2  &kp N3  &none             &none           &none      &none    &none      &none        &none
&none    &trans       &trans       &trans  &trans                                    &trans     &none    &none      &trans       &kp C_MUTE
                                           &trans  &kp INS &trans    &trans   &trans   &trans
                                           &trans  &trans  &none     &trans   &none    &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&none        &none         &none         &none         &none         &none             &none            &none            &none            &none            &none            &none
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &none            &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &none            &none            &none
&sys_reset   &none         &none         &none         &none         &none             &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &none         &none         &none         &none         &none             &none            &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4        &none         &none         &none         &none         &none             &none            &none            &none            &none            &none            &to 4
&to 4        &none         &none         &none         &none                                            &none            &none            &none            &none            &to 4
                                                       &none         &none  &none      &none   &none  &none
                                                       &none         &none  &trans     &none   &trans &none
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &none   &none      &none      &none      &none             &none   &none   &none    &none   &none   &none
&none   &none   &none      &none      &none      &none             &none   &none   &none    &none   &none   &none
&none   &none   &none      &none      &none      &none             &none   &none   &none    &none   &none   &none
&none   &none   &mkp RCLK  &mkp MCLK  &mkp LCLK  &none             &none   &none   &none    &none   &none   &none
&none   &none   &none      &none      &none      &none             &none   &none   &none    &none   &none   &none
&none   &trans  &trans     &trans     &trans                               &trans  &kp LALT &none   &trans  &none
                                      &trans     &trans  &trans    &none   &trans  &trans
                                      &trans     &trans  &trans    &none   &trans  &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };
    };
};

// right hand trackball configuration

&trackball_peripheral_listener {
   input-processors =
    // activate layer 3 within 500ms of the trackball moving
    <&zip_temp_layer 3 500>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,
        <&zip_xy_to_scroll_mapper>,
        // invert horiz scrolling so that the view moves in the same direction as the top of the trackball.,
        <&zip_scroll_transform INPUT_TRANSFORM_X_INVERT>,
        <&zip_scroll_scaler 1 12>;
};
